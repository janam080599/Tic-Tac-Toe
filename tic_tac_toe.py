# -*- coding: utf-8 -*-
"""Tic-Tac-Toe.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hNxJ_UdiAQeEQ82J12wqeCj7TDidYKbC
"""

#Function to Display Board
def display_board(board):
  for i in range(0,9,3):
    print(board[i] + " | " + board[i+1] + " | " + board[i+2])
    if i!=6:
      print("---------")

#Function to assign X and O to both the players
def player_input():
  marker=""
  while(marker != 'X' or marker != 'O'):
    marker = input("Player 1: Do you want to be X or O").upper()

    if(marker=='X'):
      return ('X','O')
    if(marker=='O'):
      return ('O','X')

#Function to place X or O at the chosen position
def place_marker(board,marker,position):
  board[position]=marker

#Function to check if someone won or not
def win_check(board,mark):
    
    return ((board[7] == mark and board[8] == mark and board[6] == mark) or # across the bottom
    (board[4] == mark and board[5] == mark and board[3] == mark) or # across the middle
    (board[1] == mark and board[2] == mark and board[0] == mark) or # across the top
    (board[6] == mark and board[3] == mark and board[0] == mark) or # down the left side
    (board[7] == mark and board[4] == mark and board[1] == mark) or # down the middle
    (board[8] == mark and board[5] == mark and board[2] == mark) or # down the right side
    (board[6] == mark and board[4] == mark and board[2] == mark) or # diagonal
    (board[8] == mark and board[8] == mark and board[0] == mark)) # diagonal

#Function to decide which player goes first
import random
def choose_first():
  x=random.randint(1, 2)
  if x==1:
    return 'Player 1'
  else:
    return 'Player 2'

#Function indicating if the space on the board is available
def space_check(board,position):
  if board[position]==' ':
    return True
  return False

#Function to check if the board is full or not
def full_board_check(board):
  for i in range(0,9):
    if space_check(board, i):
      return False
  return True

#Function for player to choose position
def player_choice(board):
    position = 9
    
    while position not in [0,1,2,3,4,5,6,7,8,9] or not space_check(board, position):
        position = int(input('Choose your next position: (0-8) '))
        
    return position

#Function indicating whether or not the players want to replay the game
def replay():    
    return input('Do you want to play again? Enter Yes or No: ').lower().startswith('y')

print('Welcome to Tic Tac Toe')

while True:
  # Reset the board
    theBoard = [' '] * 10
    player1_marker, player2_marker = player_input()
    turn = choose_first()
    print(turn + ' will go first.')
    
    play_game = input('Are you ready to play? Enter Yes or No.')
    
    if play_game.lower()[0] == 'y':
        game_on = True
    else:
        game_on = False

    while game_on:
        if turn == 'Player 1':
            # Player1's turn.
            
            display_board(theBoard)
            position = player_choice(theBoard)
            place_marker(theBoard, player1_marker, position)

            if win_check(theBoard, player1_marker):
                display_board(theBoard)
                print('Congratulations! You have won the game!')
                game_on = False
            else:
                if full_board_check(theBoard):
                    display_board(theBoard)
                    print('The game is a draw!')
                    break
                else:
                    turn = 'Player 2'

        else:
            # Player2's turn.
            
            display_board(theBoard)
            position = player_choice(theBoard)
            place_marker(theBoard, player2_marker, position)

            if win_check(theBoard, player2_marker):
                display_board(theBoard)
                print('Player 2 has won!')
                game_on = False
            else:
                if full_board_check(theBoard):
                    display_board(theBoard)
                    print('The game is a draw!')
                    break
                else:
                    turn = 'Player 1'

    if not replay():
        break

